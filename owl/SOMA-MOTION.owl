Prefix(:=<http://www.ease-crc.org/ont/SOMA-MOTION.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(SOMA:=<http://www.ease-crc.org/ont/SOMA.owl#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.ease-crc.org/ont/SOMA-MOTION.owl>
Import(<http://www.ease-crc.org/ont/DUL.owl>)
Import(<http://www.ease-crc.org/ont/SOMA-ALL.owl>)
Import(<http://www.ease-crc.org/ont/SOMA-HOME.owl>)
Annotation(rdfs:comment "SOMA-MOTION defines the concepts that are specific to motion plans for librarys similiar to Giskard. Concepts include e.g. constraints, motion plans.")

Declaration(Class(:TiltingMotion))
Declaration(Class(:TiltingMotionPlan))
Declaration(Class(SOMA:AlignmentConstraint))
Declaration(Class(SOMA:AngleConstraint))
Declaration(Class(SOMA:DistanceConstraint))
Declaration(Class(SOMA:FillLevelConstraint))
Declaration(Class(SOMA:HeightConstraint))
Declaration(Class(SOMA:MonitorableMotionConstraint))
Declaration(Class(SOMA:MotionConstraint))
Declaration(Class(SOMA:MotionPlan))
Declaration(Class(SOMA:PerpendicularConstraint))
Declaration(Class(SOMA:PointingConstraint))
Declaration(ObjectProperty(SOMA:hasMonitorableConstraint))
Declaration(ObjectProperty(SOMA:isMotionPlanFor))
Declaration(DataProperty(SOMA:hasLowerLimit))
Declaration(DataProperty(SOMA:hasUpperLimit))

############################
#   Object Properties
############################

# Object Property: SOMA:hasMonitorableConstraint (SOMA:hasMonitorableConstraint)

SubObjectPropertyOf(SOMA:hasMonitorableConstraint <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasConstraint>)


############################
#   Data Properties
############################

# Data Property: SOMA:hasLowerLimit (SOMA:hasLowerLimit)

SubDataPropertyOf(SOMA:hasLowerLimit <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParameterDataValue>)

# Data Property: SOMA:hasUpperLimit (hass upper limit)

AnnotationAssertion(rdfs:label SOMA:hasUpperLimit "hass upper limit"@en)
SubDataPropertyOf(SOMA:hasUpperLimit <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParameterDataValue>)



############################
#   Classes
############################

# Class: :TiltingMotion (Tilting motion)

AnnotationAssertion(rdfs:label :TiltingMotion "Tilting motion"@en)
SubClassOf(:TiltingMotion SOMA:LimbMotion)

# Class: :TiltingMotionPlan (Tilting motion plan)

AnnotationAssertion(rdfs:label :TiltingMotionPlan "Tilting motion plan"@en)
SubClassOf(:TiltingMotionPlan SOMA:MotionPlan)
SubClassOf(:TiltingMotionPlan ObjectExactCardinality(1 SOMA:isMotionPlanFor :TiltingMotion))
SubClassOf(:TiltingMotionPlan ObjectExactCardinality(1 <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasConstraint> SOMA:AlignmentConstraint))
SubClassOf(:TiltingMotionPlan ObjectExactCardinality(1 <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasConstraint> SOMA:AngleConstraint))

# Class: SOMA:AlignmentConstraint (Alignment constraint)

AnnotationAssertion(rdfs:comment SOMA:AlignmentConstraint "A type of motion constraint that ensures two vectors, such as those representing the orientation of an end-effector and a target direction, remain aligned during the motion of the mobile manipulator."@en)
AnnotationAssertion(rdfs:label SOMA:AlignmentConstraint "Alignment constraint"@en)
SubClassOf(SOMA:AlignmentConstraint SOMA:MotionConstraint)

# Class: SOMA:AngleConstraint (Angle constraint)

AnnotationAssertion(rdfs:comment SOMA:AngleConstraint "A motion constraint that enforces a specific angular relationship between components of the mobile manipulator or between the manipulator and its environment, such as maintaining a particular angle between a robot arm and an object it is manipulating."@en)
AnnotationAssertion(rdfs:label SOMA:AngleConstraint "Angle constraint"^^xsd:string)
SubClassOf(SOMA:AngleConstraint SOMA:MotionConstraint)
SubClassOf(SOMA:AngleConstraint DataSomeValuesFrom(SOMA:hasLowerLimit xsd:double))
SubClassOf(SOMA:AngleConstraint DataSomeValuesFrom(SOMA:hasUpperLimit xsd:double))

# Class: SOMA:Crockery (SOMA:Crockery)

SubClassOf(SOMA:Crockery ObjectSomeValuesFrom(SOMA:hasMonitorableConstraint SOMA:FillLevelConstraint))

# Class: SOMA:DistanceConstraint (Distance constraint)

AnnotationAssertion(rdfs:comment SOMA:DistanceConstraint "A motion constraint that maintains a specific distance between components of the mobile manipulator or between the manipulator and objects in its environment, ensuring tasks such as keeping an object at a fixed distance from a sensor or avoiding collisions."@en)
AnnotationAssertion(rdfs:label SOMA:DistanceConstraint "Distance constraint"@en)
SubClassOf(SOMA:DistanceConstraint SOMA:MotionConstraint)
SubClassOf(SOMA:DistanceConstraint DataSomeValuesFrom(SOMA:hasLowerLimit xsd:double))
SubClassOf(SOMA:DistanceConstraint DataSomeValuesFrom(SOMA:hasUpperLimit xsd:double))

# Class: SOMA:FillLevelConstraint (Fill level constraint)

AnnotationAssertion(rdfs:comment SOMA:FillLevelConstraint "A subclass of monitorable motion constraints that ensures the mobile manipulator adjusts its actions based on the detected fill level of a container, such as maintaining or changing the amount of liquid or material within a specified range during a task."@en)
AnnotationAssertion(rdfs:label SOMA:FillLevelConstraint "Fill level constraint"@en)
SubClassOf(SOMA:FillLevelConstraint SOMA:MonitorableMotionConstraint)
SubClassOf(SOMA:FillLevelConstraint DataSomeValuesFrom(SOMA:hasLowerLimit xsd:double))
SubClassOf(SOMA:FillLevelConstraint DataSomeValuesFrom(SOMA:hasUpperLimit xsd:double))

# Class: SOMA:HeightConstraint (Height constraint)

AnnotationAssertion(rdfs:comment SOMA:HeightConstraint "A motion constraint that ensures the mobile manipulator or its components operate within specified vertical limits, maintaining a particular height for tasks such as lifting or placing objects at a consistent level."@en)
AnnotationAssertion(rdfs:label SOMA:HeightConstraint "Height constraint"@en)
SubClassOf(SOMA:HeightConstraint SOMA:MotionConstraint)
SubClassOf(SOMA:HeightConstraint DataSomeValuesFrom(SOMA:hasLowerLimit xsd:double))
SubClassOf(SOMA:HeightConstraint DataSomeValuesFrom(SOMA:hasUpperLimit xsd:double))

# Class: SOMA:MonitorableMotionConstraint (Monitorable motion constraint)

AnnotationAssertion(rdfs:comment SOMA:MonitorableMotionConstraint "A motion constraint that utilizes external information, such as sensory perception or environmental data, to dynamically adjust and ensure the mobile manipulator adheres to specific task requirements in real-time."@en)
AnnotationAssertion(rdfs:label SOMA:MonitorableMotionConstraint "Monitorable motion constraint"@en)
SubClassOf(SOMA:MonitorableMotionConstraint SOMA:MotionConstraint)

# Class: SOMA:MotionConstraint (Motion constraint)

AnnotationAssertion(rdfs:comment SOMA:MotionConstraint "A parameter in the motion planning framework that defines limitations or requirements on the motion of a mobile manipulator, ensuring it adheres to specific tasks or environmental interactions, such as maintaining a level object while moving or avoiding collisions."@en)
AnnotationAssertion(rdfs:label SOMA:MotionConstraint "Motion constraint"@en)
SubClassOf(SOMA:MotionConstraint <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Parameter>)

# Class: SOMA:PerpendicularConstraint (Perpendicular constraint)

AnnotationAssertion(rdfs:comment SOMA:PerpendicularConstraint "A motion constraint that ensures two vectors or surfaces maintain a perpendicular relationship to each other during the motion of the mobile manipulator, such as keeping an end-effector perpendicular to a surface it is interacting with."^^xsd:string)
AnnotationAssertion(rdfs:label SOMA:PerpendicularConstraint "Perpendicular constraint"@en)
SubClassOf(SOMA:PerpendicularConstraint SOMA:MotionConstraint)

# Class: SOMA:PointingConstraint (Pointing constraint)

AnnotationAssertion(rdfs:comment SOMA:PointingConstraint "A motion constraint that ensures a specific part of the mobile manipulator, such as a camera or tool, remains oriented towards a particular point or target throughout the motion."@en)
AnnotationAssertion(rdfs:label SOMA:PointingConstraint "Pointing constraint"@en)
SubClassOf(SOMA:PointingConstraint SOMA:MotionConstraint)


)